{"version":3,"sources":["BootState.js","LoadState.js","PlayState.js","MenuState.ts","EndState.js","main.js"],"names":["BootState","load","image","logo","state","start","Phaser","State","LoadState","world","centerX","centerY","ghost","add","alpha","blendMode","blendModes","LUMINOSITY","setPreloadSprite","images","space","phaser1","red","yellow","blue","console","debug","progress","game","loader","KeyCode","Q","R","emitter","PlayState","input","keyboard","arcade","physics","gravity","y","sprite","enable","body","angularVelocity","bounce","set","velocity","collideWorldBounds","makeParticles","ADD","setAngle","setRotation","setScale","flow","time","physicsElapsedMS","text","fill","font","bringToTop","addKey","onDown","addOnce","restart","emitX","emitY","EndScene","title","align","fontFamily","fontSize","onStateChange","current","prev","info","newGame","Game","gameConfig","MenuState","EndState","destroyGame","destroy","renderer","CANVAS","width","height","Point","PIXI","Sprite","defaultAnchor","module","hot","dispose","accept"],"mappings":";;AKCA;;AACA;;AACA;ALHA,ACAA;AIIA;;AACA;;;;AAEA,SAASwE,aAAT,CAAwBC,OAAxB,EAAiCC,IAAjC,EAAuC;AACrCjD,EAAAA,OAAO,CAACkD,IAAR,CAAa,6BAAb,EAA4CD,IAAI,IAAI,QAApD,EAA8DD,OAA9D;AACD;;AAED,SAASG,OAAT,GAAoB;AAClB,MAAIhD,IAAJ,EAAU;AAEVA,EAAAA,IAAI,GAAG,IAAItB,MAAM,CAACuE,IAAX,CAAgBC,UAAhB,CAAP;AAEAlD,EAAAA,IAAI,CAACxB,KAAL,CAAWoE,aAAX,CAAyB3D,GAAzB,CAA6B2D,aAA7B;AAEA5C,EAAAA,IAAI,CAACxB,KAAL,CAAWS,GAAX,CAAe,MAAf,EAAuBb,kBAAvB;AACA4B,EAAAA,IAAI,CAACxB,KAAL,CAAWS,GAAX,CAAe,MAAf,EAAuBL,kBAAvB;AACAoB,EAAAA,IAAI,CAACxB,KAAL,CAAWS,GAAX,CAAe,MAAf,EAAuBkE,kBAAvB;AACAnD,EAAAA,IAAI,CAACxB,KAAL,CAAWS,GAAX,CAAe,MAAf,EAAuBqB,kBAAvB;AACAN,EAAAA,IAAI,CAACxB,KAAL,CAAWS,GAAX,CAAe,KAAf,EAAsBmE,iBAAtB;AACApD,EAAAA,IAAI,CAACxB,KAAL,CAAWC,KAAX,CAAiB,MAAjB;AACD;IDxBoB8D,kBFAJ7D,MAAM,CAACwB;AG0BxB,IH1BQC,KG0BCkD,WAAT,GAAwB,CH1BhBlD;AG2BN,IH3BSC,EG2BL,CAACJ,IAAL,EAAW,WH3BFI;ACAX,ADEA,AG2BEJ,EAAAA,EF7BF,ADEIK,EG2BE,CAACiD,IH3BP,ECFA,CE6BE;AF7BF,ADGA,AG2BEtD,EAAAA,EL5BmB5B,ACAAQ,ACCjBL,EG2BE,EH3BN,CG2BS,IAAP;AF9BF,AE+BC,UF/BD,MAAA,EAAA;AAAuC,EAAA,EDKlB+B,OCLkB,CAAA,SAAA,EAAA,MAAA,CAAA;AEiCvC,IAAM4C,UAAU,GAAG;AFjCnB,AEkCEK,EAAAA,QAAQ,CFlCV,CEkCY7E,MAAM,CAAC8E,CFlCnB,GAAA,EEiCmB;AAEjBC,EAAAA,KAAK,EAAE,GAFU;AFnBlB,AEsBCC,EAAAA,MAAM,EAAE;AAHS,CAAnB;AFhCE,AEsCF,EFtCE,EEsCE1D,IAAJ,GFtCE,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,AEwCFtB,MAAM,CAACiF,CFxCL,IEwCF,CFxCE,AEwCWzC,GFxCX,AEwCF,CAAiB0C,GFxCf,CEwCmB,CAACC,MAAL,CDxCL,ACwCiBC,aAA7B,EAA4C,GAA5C,EAAiD,GAAjD;ADxCY,ACyCZjE,OAAO,CAACkD,IAAR,CAAa,2BAAb,EAA0Ca,IAAI,CAACC,MAAL,CAAYC,aAAtD;AFxCU,QAAA,EAAA,GAAuB,KAAK,KAA5B;ACDE,ADCF,AE0CV,IAAIC,IF1CQ,EE0CF,CAACC,GAAX,CF1CmB,CE0CH,EF1CG,EAAA,CAAA,GCAc,IDAvB,CCA4BnF,KAD1B;AAAA,ADCF,AE2CRkF,EAAAA,MF3CmB,AE2Cb,CAACC,CD3CGlF,EC2CV,CAAWmF,EF3Ce,ECDhB,CDCgB,EAAA,AE2C1B,CF3C0B,AE2CPZ,OF3CX,EHCG,ACAA,EGDDvE,AC2CV,OD5CU;AJGR,AIHQ,AHEC,AECT,AE0CFiF,EAAAA,MAAM,CF1CC,AE0CAC,CD5CYjF,CJEZV,CGAL,AE0CF,CF1CW,AE0CA6F,EL1CT,CAAU5F,CIHF,CDGR,CAAe,AE0CjB,CAAkB0E,CL1ChB,CAAgB,ECAa,EEA7B,CE0CF,CL1CE,AGAwB,CFAUnE,CDAVN,EIFPQ,EHCR,CECT,EAAiC,ECHzB,IJGR,CGAA;AHCD,AIDC,AHDS,AEGT,AEyCH,QFzCS,EFFED,CGAHG,EDEM,CCFX,CAASX,CDEK,CFHL,GGCT,CAAeQ,ADEI,GAAL,CAAS,GCFvB,CDEc,ADAN,CEFgBC,ADEI,EFFpBD,KGAR,ADEc,ECFmB,AHDxB,AEG4B,OCFrC,ADEc,EAAgC,mCAAhC,EAAqE;ACAnF,AHHS,AEIP,ADDM,MCCN,ICDI0D,AHFWzD,CEGV,EAAE,ECDE,EHHF,CGGK,GDAqE,ECAhEE,GAAL,CAAS4C,IAAT,CAAc/C,AHFXC,OGEH,AHHL,EGG4BA,OAAvB,EAAgC,0BAAhC,EAA4D;AACxE0D,AHFF,AEGE,AEyCN,IAAI,CAACzC,CFzCC,ECDAyC,CC0CN,CJ5CUzD,AEGA,CEyCCgE,CFzCC,CCDD,EAAE,AHFE,GAAG,AI4CA,CF3CqE,ICAT,AHDvD/D,GAAL,CAASX,KAAT,CAAeQ,OAAf,EAAwBC,OAAxB,EAAiC,MAAjC,CAAd;AGGE+C,AHFF,AEGE,ADHM,MCGN,ECDAA,EHFIvD,ACCEU,EECF,CFFE,CEEA,AHFE,AEGA,EAAE,ADFW,CDDV,GCAL,CEAkE,AFClEA,CDDUA,ECAV,CDAK,CAASX,GDCd,ECDK,CAAeQ,OAAf,EAAwBC,OAAxB,EAAiC,MAAjC,CAAb;ADEA,AICE2D,AHDF1D,AEFmF,ADA3E,KCAM,CFEdA,AEFA,ECGE0D,EFFWnC,CFCR/B,ACAA,CAACU,GCFE,CFER,CAAWT,ACAX,CGCY,AFFW,EEET,AHDA,EDAd,AEFQ,CFES,ACAjB,ACDa8B,KADL,CFER,GIF0E;AJG3E,AICGoC,AHDF3D,AEGA,ADNQ,MDGRA,EGCE2D,CDEG,CDJGnC,CDCH,CAACrB,EEGN,CAAW,CCFD,EAAE,AFJJ,CCMR,CAAgB,CFHhB,ACDqBoB,GDCH7B,ECHV,CCMR,ADJQ8B,CCIgB,EFHA,CAACpB,ICHjB,KCMgB,CFHN,CAAkBC,UAApC;AGH0E,AHK1E,AECgC,ADNxB,MCMwB,CCNlB,CAAd,EFGQoB,CDEHpC,AEC+B,CAAC,GFDrC,CAAUiB,ACLF,CCMwB,CAAW,CDHxB,ICGa,CAAiB,ADHzBoB,MCGQ,CDNxB,CDKR,ACFQD,CDEmBlC,IAA3B,CCLQ;AEOR,AHAA,AED2D,ADD3DkC,KCCA,CDDAA,KEEKF,AHAAlC,CCFC,CAACsC,EDEP,CGAA,AHAUrC,CGAC4D,GFFX,CDEA,ACFetB,CDEC,ACFhB,CEEA,CAAkBuB,CFFC,GAAnB,CDEA,EGAA,AHAyB5C,CGAC,SHAMC,GGAA,EHAhC;AGAkC,AHClC,AEDD,ADACP,GCZF,GDYEA,EEAkC,CFA/B,CAACX,CDCCD,EGDiC,CAACG,CHCvC,ACDA,CDCUF,ACDA,GEAwB,AFAlC,CEA6CG,CHC7C,ACDe,CDCC,ECDhB,CEAkC,CAAiB,AFA/B,IDCpB,EGDkC,AHCRc,CCD1B,SDCiCE,OAAjC;AGD6D,A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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["import logo from './assets/logo.png';\n\nexport default class BootState extends Phaser.State {\n  preload () {\n    this.load.image('logo', logo);\n  }\n\n  create () {\n    this.state.start('load');\n  }\n}\n","import images from './assets/*.png';\n\nexport default class LoadState extends Phaser.State {\n  preload () {\n    const { centerX, centerY } = this.world;\n    const ghost = this.add.image(centerX, centerY, 'logo');\n    const logo = this.add.image(centerX, centerY, 'logo');\n\n    ghost.alpha = 0.2;\n    ghost.blendMode = Phaser.blendModes.LUMINOSITY;\n\n    this.load.setPreloadSprite(logo);\n\n    this.load.image('space', images.space);\n    this.load.image('planet', images.phaser1);\n    this.load.image('red', images.red);\n    this.load.image('yellow', images.yellow);\n    this.load.image('blue', images.blue);\n  }\n\n  loadUpdate () {\n    console.debug('progress', this.load.progress);\n  }\n\n  loadRender () {\n    this.game.debug.loader(this.load, 20, 20);\n  }\n\n  create () {\n    this.state.start('menu');\n    // this.state.start('play');\n  }\n}\n","const { Q, R } = Phaser.KeyCode;\n\nlet emitter;\nlet logo;\n\nexport default class PlayState extends Phaser.State {\n  create () {\n    const { add, input } = this;\n    const { keyboard } = input;\n    const { arcade } = this.physics;\n\n    arcade.gravity.y = 300;\n\n    add.image(400, 300, 'space');\n\n    logo = add.sprite(0, 0, 'planet');\n\n    arcade.enable(logo);\n\n    logo.body.angularVelocity = 30;\n    logo.body.bounce.set(1, 1);\n    logo.body.velocity.set(120, 120);\n    logo.body.collideWorldBounds = true;\n\n    emitter = add.emitter(logo.centerX, logo.centerY);\n    emitter.makeParticles('yellow', 0, 120);\n    emitter.blendMode = Phaser.blendModes.ADD;\n    emitter.setAngle(0, 0, 0, 120);\n    emitter.setRotation(0, 0);\n    emitter.setScale(0.1, 0.2, 0.1, 0.2);\n    emitter.flow(2000, this.time.physicsElapsedMS);\n\n    add.text(120, 20, '(R) Restart | (Q) Quit', { fill: 'white', font: '24px sans-serif' });\n\n    logo.bringToTop();\n\n    keyboard.addKey(Q).onDown.addOnce(() => { this.state.start('menu'); });\n    keyboard.addKey(R).onDown.addOnce(() => { this.state.restart(); });\n  }\n\n  update () {\n    emitter.emitX = logo.centerX;\n    emitter.emitY = logo.centerY;\n  }\n}\n","export default class MenuState extends Phaser.State {\n  create () {\n    const { centerX, centerY } = this.world;\n\n    this.add.image(centerX, centerY, 'space');\n\n    const title = this.add.text(centerX, centerY, 'Phaser CE with Parcel\\n\\n< play >', {\n      align: 'center',\n      fill: 'white',\n      fontSize: 48\n    });\n\n    this.input.onUp.addOnce(() => { this.state.start('play'); });\n  }\n}\n","export default class EndScene extends Phaser.State {\n  create () {\n    const { centerX, centerY } = this.world;\n\n    this.add.image(centerX, centerY, 'space');\n\n    const title = this.add.text(centerX, centerY, 'Game Over :(\\n\\n< menu >', {\n      align: 'center',\n      fill: 'white',\n      fontFamily: 'sans-serif',\n      fontSize: 48\n    });\n\n    this.input.onDown.addOnce(() => { this.state.start('menu'); });\n  }\n}\n","\nimport BootState from './BootState';\nimport LoadState from './LoadState';\nimport PlayState from './PlayState';\nimport MenuState from './MenuState.ts';\nimport EndState from './EndState';\n\nfunction onStateChange (current, prev) {\n  console.info('State changed from %s to %s', prev || '[none]', current);\n}\n\nfunction newGame () {\n  if (game) return;\n\n  game = new Phaser.Game(gameConfig);\n\n  game.state.onStateChange.add(onStateChange);\n\n  game.state.add('boot', BootState);\n  game.state.add('load', LoadState);\n  game.state.add('menu', MenuState);\n  game.state.add('play', PlayState);\n  game.state.add('end', EndState);\n  game.state.start('boot');\n}\n\nfunction destroyGame () {\n  if (!game) return;\n\n  game.destroy();\n  game = null;\n}\n\nconst gameConfig = {\n  renderer: Phaser.CANVAS,\n  width: 800,\n  height: 600\n};\n\nlet game;\n\nPhaser.Point.set(PIXI.Sprite.defaultAnchor, 0.5, 0.5);\nconsole.info('PIXI.Sprite.defaultAnchor', PIXI.Sprite.defaultAnchor);\n\nif (module.hot) {\n  module.hot.dispose(destroyGame);\n  module.hot.accept(newGame);\n}\n\nif (!game) newGame();\n"]}